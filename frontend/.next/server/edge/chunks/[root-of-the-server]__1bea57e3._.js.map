{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Desktop/rhmanagement/frontend/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\n\r\n// Routes publiques qui ne nécessitent pas d'authentification\r\nconst PUBLIC_ROUTES = ['/login', '/register', '/forgot-password', '/verify'];\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const { pathname } = request.nextUrl;\r\n\r\n  // Vérifier si la route est publique\r\n  const isPublicRoute = PUBLIC_ROUTES.some(route => pathname.startsWith(route));\r\n\r\n  // Récupérer le token depuis les cookies\r\n  const token = request.cookies.get('token')?.value;\r\n\r\n  // Si la route n'est PAS publique et qu'il n'y a pas de token -> rediriger vers login\r\n  // Cela protège TOUTES les routes par défaut (y compris /)\r\n  if (!isPublicRoute && !token) {\r\n    const url = request.nextUrl.clone();\r\n    url.pathname = '/login';\r\n    return NextResponse.redirect(url);\r\n  }\r\n\r\n  // Si l'utilisateur est authentifié et essaie d'accéder à une page publique\r\n  if (token && isPublicRoute) {\r\n    const url = request.nextUrl.clone();\r\n    url.pathname = '/dashboard/rh';\r\n    return NextResponse.redirect(url);\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\n// Configurer les chemins pour lesquels le middleware doit s'exécuter\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - images (public images)\r\n     * - favicon.ico (favicon file)\r\n     * - public static files (.png, .jpg, .jpeg, .svg, .ico)\r\n     */\r\n    '/((?!api|_next/static|_next/image|images|favicon.ico|.*\\\\.(?:png|jpg|jpeg|svg|ico|webp)).*)',\r\n  ],\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAGA,6DAA6D;AAC7D,MAAM,gBAAgB;IAAC;IAAU;IAAa;IAAoB;CAAU;AAErE,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,oCAAoC;IACpC,MAAM,gBAAgB,cAAc,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC;IAEtE,wCAAwC;IACxC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAE5C,qFAAqF;IACrF,0DAA0D;IAC1D,IAAI,CAAC,iBAAiB,CAAC,OAAO;QAC5B,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,OAAO,uOAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,2EAA2E;IAC3E,IAAI,SAAS,eAAe;QAC1B,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,OAAO,uOAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,uOAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;;KAQC,GACD;KACD;AACH"}}]
}