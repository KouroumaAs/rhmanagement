{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mariame%20barry/Desktop/rhmanagement/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,6MAAO,EAAC,IAAA,oLAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mariame%20barry/Desktop/rhmanagement/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,8MAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,+MAAI,GAAG;IAE9B,qBACE,qRAAC;QACC,aAAU;QACV,WAAW,IAAA,yJAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mariame%20barry/Desktop/rhmanagement/frontend/src/constants/index.ts"],"sourcesContent":["import { EmployeeType, EmployeeStatus, BadgeStatus, UserRole } from \"@/src/types\";\r\n\r\n// Employee Type Labels and Colors\r\nexport const EMPLOYEE_TYPE_LABELS: Record<EmployeeType, string> = {\r\n  PERSONNELS_DSD: \"Personnels DSD Guinée\",\r\n  DNTT: \"DNTT\",\r\n  STAGIAIRES_DSD: \"Stagiaires DSD Guinée\",\r\n  BANQUES: \"Banques\",\r\n  MAISONS_PLAQUE: \"Maisons de Plaque\",\r\n  DNTT_STAGIAIRES: \"DNTT Stagiaires\",\r\n  DEMARCHEURS: \"Collectif des Démarcheurs\",\r\n};\r\n\r\nexport const EMPLOYEE_TYPE_COLORS: Record<EmployeeType, string> = {\r\n  PERSONNELS_DSD: \"bg-[#ff8d13]\",\r\n  DNTT: \"bg-blue-600\",\r\n  STAGIAIRES_DSD: \"bg-green-600\",\r\n  BANQUES: \"bg-purple-600\",\r\n  MAISONS_PLAQUE: \"bg-pink-600\",\r\n  DNTT_STAGIAIRES: \"bg-teal-600\",\r\n  DEMARCHEURS: \"bg-amber-600\",\r\n};\r\n\r\nexport const EMPLOYEE_TYPE_BADGE_TITLES: Record<EmployeeType, string> = {\r\n  PERSONNELS_DSD: \"PERSONNELS DSD GUINEE\",\r\n  DNTT: \"DNTT\",\r\n  STAGIAIRES_DSD: \"STAGIAIRES DSD GUINEE\",\r\n  BANQUES: \"BANQUES\",\r\n  MAISONS_PLAQUE: \"MAISONS DE PLAQUE\",\r\n  DNTT_STAGIAIRES: \"DNTT STAGIAIRES\",\r\n  DEMARCHEURS: \"COLLECTIF DES DEMARCHEURS\",\r\n};\r\n\r\n// Employee Status\r\nexport const EMPLOYEE_STATUS_LABELS: Record<EmployeeStatus, string> = {\r\n  ACTIF: \"Actif\",\r\n  SUSPENDU: \"Suspendu\",\r\n  TERMINE: \"Terminé\",\r\n};\r\n\r\nexport const EMPLOYEE_STATUS_COLORS: Record<EmployeeStatus, string> = {\r\n  ACTIF: \"bg-green-500\",\r\n  SUSPENDU: \"bg-[#ff8d13]\",\r\n  TERMINE: \"bg-gray-500\",\r\n};\r\n\r\n// Badge Status\r\nexport const BADGE_STATUS_LABELS: Record<BadgeStatus, string> = {\r\n  EN_ATTENTE: \"En attente\",\r\n  IMPRIME: \"Imprimé\",\r\n};\r\n\r\nexport const BADGE_STATUS_COLORS: Record<BadgeStatus, string> = {\r\n  EN_ATTENTE: \"bg-[#ff8d13]\",\r\n  IMPRIME: \"bg-green-500\",\r\n};\r\n\r\n// User Roles\r\nexport const USER_ROLE_LABELS: Record<UserRole, string> = {\r\n  RH: \"Ressources Humaines\",\r\n  ASSISTANT_RH: \"Assistant RH\",\r\n  IMPRESSION: \"Service d'Impression\",\r\n  ADMIN: \"Administrateur\",\r\n  SECURITY: \"Agent de Sécurité\",\r\n};\r\n\r\n// Routes\r\nexport const ROUTES = {\r\n  HOME: \"/\",\r\n  LOGIN: \"/login\",\r\n  REGISTER: \"/register\",\r\n  FORGOT_PASSWORD: \"/forgot-password\",\r\n  CHANGE_PASSWORD: \"/change-password\",\r\n  DASHBOARD_RH: \"/dashboard/rh\",\r\n  DASHBOARD_IMPRESSION: \"/dashboard/impression\",\r\n  EMPLOYEES: \"/dashboard/rh/employees\",\r\n  EMPLOYEES_NEW: \"/dashboard/rh/employees/new\",\r\n} as const;\r\n\r\n// API Endpoints (à configurer selon votre backend)\r\nexport const API_ENDPOINTS = {\r\n  // Auth\r\n  AUTH: {\r\n    LOGIN: \"/auth/login\",\r\n    REGISTER: \"/auth/register\",\r\n    LOGOUT: \"/auth/logout\",\r\n    RESET_PASSWORD: \"/auth/reset-password\",\r\n    CHANGE_PASSWORD: \"/auth/change-password\",\r\n    STATS: \"/auth/stats\",\r\n    USERS: \"/auth/users\",\r\n  },\r\n\r\n  // Employees\r\n  EMPLOYEES: \"/employees\",\r\n  EMPLOYEE_BY_ID: (id: string) => `/employees/${id}`,\r\n  EMPLOYEE_STATS: \"/employees/stats\",\r\n\r\n  // Badges\r\n  BADGES: \"/badges\",\r\n  BADGE_BY_ID: (id: string) => `/badges/${id}`,\r\n  BADGE_STATS: \"/badges/stats\",\r\n  PRINT_BADGE: (id: string) => `/badges/${id}/print`,\r\n\r\n  // Users\r\n  USERS: \"/users\",\r\n  USER_PROFILE: \"/users/me\",\r\n} as const;\r\n\r\n// Pagination\r\nexport const DEFAULT_PAGE_SIZE = 10;\r\nexport const PAGE_SIZE_OPTIONS = [10, 25, 50, 100];\r\n\r\n// Validation\r\nexport const VALIDATION = {\r\n  MIN_PASSWORD_LENGTH: 8,\r\n  PHONE_REGEX: /^(\\+224\\s?)?6\\d{2}(\\s?\\d{2}){3}$/,\r\n  // Regex email optimisée et plus stricte (RFC 5322 simplifié)\r\n  EMAIL_REGEX: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\r\n  MATRICULE_REGEX: /.{3,}/,\r\n} as const;\r\n\r\n// Date formats\r\nexport const DATE_FORMAT = \"DD/MM/YYYY\";\r\nexport const DATETIME_FORMAT = \"DD/MM/YYYY HH:mm\";\r\n\r\n// Messages\r\nexport const MESSAGES = {\r\n  SUCCESS: {\r\n    EMPLOYEE_CREATED: \"Employé créé avec succès\",\r\n    EMPLOYEE_UPDATED: \"Employé mis à jour avec succès\",\r\n    EMPLOYEE_DELETED: \"Employé supprimé avec succès\",\r\n    BADGE_PRINTED: \"Badge imprimé avec succès\",\r\n    PASSWORD_CHANGED: \"Mot de passe modifié avec succès\",\r\n    LOGIN_SUCCESS: \"Connexion réussie\",\r\n    LOGOUT_SUCCESS: \"Déconnexion réussie\",\r\n  },\r\n  ERROR: {\r\n    GENERIC: \"Une erreur est survenue\",\r\n    NETWORK: \"Erreur de connexion au serveur\",\r\n    UNAUTHORIZED: \"Accès non autorisé\",\r\n    NOT_FOUND: \"Ressource non trouvée\",\r\n    VALIDATION: \"Veuillez vérifier les informations saisies\",\r\n    PASSWORD_MISMATCH: \"Les mots de passe ne correspondent pas\",\r\n    INVALID_CREDENTIALS: \"Email ou mot de passe incorrect\",\r\n  },\r\n} as const;\r\n\r\n// Helper pour générer l'URL complète des images\r\nexport const getImageUrl = (photoPath: string | null | undefined): string | null => {\r\n  if (!photoPath) return null;\r\n\r\n  // Si l'URL commence par http, la retourner telle quelle\r\n  if (photoPath.startsWith('http')) {\r\n    return photoPath;\r\n  }\r\n\r\n  // Construire l'URL avec l'API URL de base\r\n  // En production: https://rhmanagement.dsdguinee.com/api + /uploads/...\r\n  // = https://rhmanagement.dsdguinee.com/api/uploads/...\r\n  const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4003';\r\n\r\n  // Enlever le / au début de photoPath si présent pour éviter //\r\n  const cleanPath = photoPath.startsWith('/') ? photoPath.slice(1) : photoPath;\r\n\r\n  return `${apiUrl}/${cleanPath}`;\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,MAAM,uBAAqD;IAChE,gBAAgB;IAChB,MAAM;IACN,gBAAgB;IAChB,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACf;AAEO,MAAM,uBAAqD;IAChE,gBAAgB;IAChB,MAAM;IACN,gBAAgB;IAChB,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACf;AAEO,MAAM,6BAA2D;IACtE,gBAAgB;IAChB,MAAM;IACN,gBAAgB;IAChB,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACf;AAGO,MAAM,yBAAyD;IACpE,OAAO;IACP,UAAU;IACV,SAAS;AACX;AAEO,MAAM,yBAAyD;IACpE,OAAO;IACP,UAAU;IACV,SAAS;AACX;AAGO,MAAM,sBAAmD;IAC9D,YAAY;IACZ,SAAS;AACX;AAEO,MAAM,sBAAmD;IAC9D,YAAY;IACZ,SAAS;AACX;AAGO,MAAM,mBAA6C;IACxD,IAAI;IACJ,cAAc;IACd,YAAY;IACZ,OAAO;IACP,UAAU;AACZ;AAGO,MAAM,SAAS;IACpB,MAAM;IACN,OAAO;IACP,UAAU;IACV,iBAAiB;IACjB,iBAAiB;IACjB,cAAc;IACd,sBAAsB;IACtB,WAAW;IACX,eAAe;AACjB;AAGO,MAAM,gBAAgB;IAC3B,OAAO;IACP,MAAM;QACJ,OAAO;QACP,UAAU;QACV,QAAQ;QACR,gBAAgB;QAChB,iBAAiB;QACjB,OAAO;QACP,OAAO;IACT;IAEA,YAAY;IACZ,WAAW;IACX,gBAAgB,CAAC,KAAe,CAAC,WAAW,EAAE,IAAI;IAClD,gBAAgB;IAEhB,SAAS;IACT,QAAQ;IACR,aAAa,CAAC,KAAe,CAAC,QAAQ,EAAE,IAAI;IAC5C,aAAa;IACb,aAAa,CAAC,KAAe,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC;IAElD,QAAQ;IACR,OAAO;IACP,cAAc;AAChB;AAGO,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;IAAC;IAAI;IAAI;IAAI;CAAI;AAG3C,MAAM,aAAa;IACxB,qBAAqB;IACrB,aAAa;IACb,6DAA6D;IAC7D,aAAa;IACb,iBAAiB;AACnB;AAGO,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAGxB,MAAM,WAAW;IACtB,SAAS;QACP,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,eAAe;QACf,kBAAkB;QAClB,eAAe;QACf,gBAAgB;IAClB;IACA,OAAO;QACL,SAAS;QACT,SAAS;QACT,cAAc;QACd,WAAW;QACX,YAAY;QACZ,mBAAmB;QACnB,qBAAqB;IACvB;AACF;AAGO,MAAM,cAAc,CAAC;IAC1B,IAAI,CAAC,WAAW,OAAO;IAEvB,wDAAwD;IACxD,IAAI,UAAU,UAAU,CAAC,SAAS;QAChC,OAAO;IACT;IAEA,0CAA0C;IAC1C,uEAAuE;IACvE,uDAAuD;IACvD,MAAM,SAAS,8EAAmC;IAElD,+DAA+D;IAC/D,MAAM,YAAY,UAAU,UAAU,CAAC,OAAO,UAAU,KAAK,CAAC,KAAK;IAEnE,OAAO,GAAG,OAAO,CAAC,EAAE,WAAW;AACjC","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mariame%20barry/Desktop/rhmanagement/frontend/src/services/api.ts"],"sourcesContent":["import { API_ENDPOINTS } from \"@/src/constants\";\r\nimport type { ApiResponse } from \"@/src/types\";\r\n\r\n/**\r\n * Base API configuration\r\n */\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000/api\";\r\n\r\n/**\r\n * Custom error class for API errors\r\n */\r\nexport class ApiError extends Error {\r\n  constructor(\r\n    public status: number,\r\n    public message: string,\r\n    public data?: any\r\n  ) {\r\n    super(message);\r\n    this.name = \"ApiError\";\r\n  }\r\n\r\n  /**\r\n   * Get a user-friendly error message based on status code\r\n   */\r\n  getUserMessage(): string {\r\n    switch (this.status) {\r\n      case 400:\r\n        return `❌ Erreur de validation: ${this.message}`;\r\n      case 401:\r\n        return \"🔒 Session expirée. Veuillez vous reconnecter.\";\r\n      case 403:\r\n        return \"⛔ Accès refusé. Vous n'avez pas les permissions nécessaires.\";\r\n      case 404:\r\n        return `🔍 Ressource non trouvée: ${this.message}`;\r\n      case 409:\r\n        return `⚠️ Conflit: ${this.message}`;\r\n      case 422:\r\n        return `📋 Données invalides: ${this.message}`;\r\n      case 500:\r\n        return `🔥 Erreur serveur: ${this.message}`;\r\n      case 503:\r\n        return \"⏸️ Service temporairement indisponible. Réessayez plus tard.\";\r\n      default:\r\n        return `❌ ${this.message}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get debug information for logging\r\n   */\r\n  getDebugInfo(): string {\r\n    return `[${this.status}] ${this.name}: ${this.message}\\nData: ${JSON.stringify(this.data, null, 2)}`;\r\n  }\r\n}\r\n\r\n/**\r\n * Base fetch wrapper with error handling\r\n */\r\nasync function fetchAPI<T>(\r\n  endpoint: string,\r\n  options: RequestInit = {}\r\n): Promise<ApiResponse<T>> {\r\n  try {\r\n    // Get token from localStorage (only in browser)\r\n    const token = typeof window !== 'undefined'\r\n      ? (localStorage.getItem(\"token\") || localStorage.getItem(\"auth_token\"))\r\n      : null;\r\n\r\n    console.log(`🌐 API Request: ${options.method || 'GET'} ${endpoint}`);\r\n\r\n    // Créer un AbortController pour gérer le timeout\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 secondes\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        cache: 'no-store',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n          ...options.headers,\r\n        },\r\n        signal: controller.signal,\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      // Try to parse JSON response\r\n      let data: any;\r\n      try {\r\n        data = await response.json();\r\n      } catch (parseError) {\r\n        console.error(\"❌ Erreur de parsing JSON:\", parseError);\r\n        throw new ApiError(\r\n          response.status,\r\n          \"Réponse du serveur invalide\",\r\n          { parseError, status: response.status }\r\n        );\r\n      }\r\n\r\n      if (!response.ok) {\r\n        // Si le backend renvoie un tableau d'erreurs (validation Zod)\r\n        let errorMessage = data.message || \"Une erreur est survenue\";\r\n\r\n        if (data.errors && Array.isArray(data.errors)) {\r\n          errorMessage = data.errors.map((err: any) => err.message || err).join(', ');\r\n        }\r\n\r\n        const apiError = new ApiError(response.status, errorMessage, data);\r\n\r\n        // Log detailed error in console\r\n        console.error(\"❌ API Error:\", apiError.getDebugInfo());\r\n\r\n        throw apiError;\r\n      }\r\n\r\n      console.log(`✅ API Success: ${options.method || 'GET'} ${endpoint}`);\r\n\r\n      // Return the full response from backend\r\n      // Backend returns: { success: true, data: ..., message?: ..., pagination?: ... }\r\n      // Extraire success et garder toutes les autres propriétés intactes\r\n      const { success, ...rest } = data;\r\n      return {\r\n        success: success ?? true,\r\n        ...rest,\r\n      };\r\n    } catch (fetchError) {\r\n      clearTimeout(timeoutId);\r\n\r\n      // Gérer spécifiquement l'erreur de timeout\r\n      if (fetchError instanceof Error && fetchError.name === 'AbortError') {\r\n        const timeoutError = new ApiError(\r\n          408,\r\n          \"La requête a pris trop de temps (timeout après 30 secondes)\"\r\n        );\r\n        console.error(\"⏱️ Timeout Error:\", timeoutError.getDebugInfo());\r\n        throw timeoutError;\r\n      }\r\n\r\n      throw fetchError;\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof ApiError) {\r\n      throw error;\r\n    }\r\n\r\n    // Network error or other exception\r\n    const networkError = new ApiError(\r\n      0,\r\n      error instanceof Error ? error.message : \"Erreur de connexion au serveur\"\r\n    );\r\n\r\n    console.error(\"❌ Network Error:\", networkError.getDebugInfo());\r\n\r\n    throw networkError;\r\n  }\r\n}\r\n\r\n/**\r\n * GET request\r\n */\r\nexport async function get<T>(endpoint: string, options?: RequestInit): Promise<ApiResponse<T>> {\r\n  return fetchAPI<T>(endpoint, {\r\n    ...options,\r\n    method: \"GET\",\r\n  });\r\n}\r\n\r\n/**\r\n * POST request\r\n */\r\nexport async function post<T>(\r\n  endpoint: string,\r\n  data?: any,\r\n  options?: RequestInit\r\n): Promise<ApiResponse<T>> {\r\n  return fetchAPI<T>(endpoint, {\r\n    ...options,\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n  });\r\n}\r\n\r\n/**\r\n * PUT request\r\n */\r\nexport async function put<T>(\r\n  endpoint: string,\r\n  data?: any,\r\n  options?: RequestInit\r\n): Promise<ApiResponse<T>> {\r\n  return fetchAPI<T>(endpoint, {\r\n    ...options,\r\n    method: \"PUT\",\r\n    body: JSON.stringify(data),\r\n  });\r\n}\r\n\r\n/**\r\n * PATCH request\r\n */\r\nexport async function patch<T>(\r\n  endpoint: string,\r\n  data?: any,\r\n  options?: RequestInit\r\n): Promise<ApiResponse<T>> {\r\n  return fetchAPI<T>(endpoint, {\r\n    ...options,\r\n    method: \"PATCH\",\r\n    body: JSON.stringify(data),\r\n  });\r\n}\r\n\r\n/**\r\n * DELETE request\r\n */\r\nexport async function del<T>(endpoint: string, options?: RequestInit): Promise<ApiResponse<T>> {\r\n  return fetchAPI<T>(endpoint, {\r\n    ...options,\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\n/**\r\n * Upload file with multipart/form-data\r\n */\r\nexport async function upload<T>(\r\n  endpoint: string,\r\n  formData: FormData,\r\n  options?: RequestInit\r\n): Promise<ApiResponse<T>> {\r\n  try {\r\n    const token = typeof window !== 'undefined'\r\n      ? (localStorage.getItem(\"token\") || localStorage.getItem(\"auth_token\"))\r\n      : null;\r\n\r\n    console.log(`📤 Upload Request: POST ${endpoint}`);\r\n\r\n    // Timeout plus long pour les uploads (60 secondes)\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 60000);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n          ...options?.headers,\r\n        },\r\n        signal: controller.signal,\r\n        // Don't set Content-Type, let browser set it with boundary\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      let data: any;\r\n      try {\r\n        data = await response.json();\r\n      } catch (parseError) {\r\n        console.error(\"❌ Erreur de parsing JSON:\", parseError);\r\n        throw new ApiError(\r\n          response.status,\r\n          \"Réponse du serveur invalide\",\r\n          { parseError, status: response.status }\r\n        );\r\n      }\r\n\r\n      if (!response.ok) {\r\n        const apiError = new ApiError(response.status, data.message || \"Une erreur est survenue\", data);\r\n        console.error(\"❌ Upload Error:\", apiError.getDebugInfo());\r\n        throw apiError;\r\n      }\r\n\r\n      console.log(`✅ Upload Success: ${endpoint}`);\r\n\r\n      const { success, ...rest } = data;\r\n      return {\r\n        success: success ?? true,\r\n        ...rest,\r\n      };\r\n    } catch (uploadFetchError) {\r\n      clearTimeout(timeoutId);\r\n\r\n      // Gérer l'erreur de timeout pour les uploads\r\n      if (uploadFetchError instanceof Error && uploadFetchError.name === 'AbortError') {\r\n        const timeoutError = new ApiError(\r\n          408,\r\n          \"L'upload a pris trop de temps (timeout après 60 secondes)\"\r\n        );\r\n        console.error(\"⏱️ Upload Timeout:\", timeoutError.getDebugInfo());\r\n        throw timeoutError;\r\n      }\r\n\r\n      throw uploadFetchError;\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof ApiError) {\r\n      throw error;\r\n    }\r\n\r\n    const uploadError = new ApiError(\r\n      500,\r\n      error instanceof Error ? error.message : \"Erreur lors de l'upload\"\r\n    );\r\n\r\n    console.error(\"❌ Upload Error:\", uploadError.getDebugInfo());\r\n\r\n    throw uploadError;\r\n  }\r\n}\r\n\r\n/**\r\n * Handle API errors uniformly\r\n * Use this in catch blocks to get a user-friendly error message\r\n */\r\nexport function handleApiError(error: any): string {\r\n  if (error instanceof ApiError) {\r\n    return error.getUserMessage();\r\n  }\r\n  return error?.message || \"Une erreur inattendue est survenue\";\r\n}\r\n\r\n/**\r\n * Auth service\r\n */\r\nexport const authService = {\r\n  login: async (credentials: { email: string; password: string }) => {\r\n    return post(API_ENDPOINTS.AUTH.LOGIN, credentials);\r\n  },\r\n  register: async (data: any) => {\r\n    return post(API_ENDPOINTS.AUTH.REGISTER, data);\r\n  },\r\n  logout: async () => {\r\n    return post(API_ENDPOINTS.AUTH.LOGOUT);\r\n  },\r\n  changePassword: async (data: { currentPassword: string; newPassword: string }) => {\r\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n    return put(API_ENDPOINTS.AUTH.CHANGE_PASSWORD, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;CAEC,GACD,MAAM,eAAe,8EAAmC;AAKjD,MAAM,iBAAiB;;;;IAC5B,YACE,AAAO,MAAc,EACrB,AAAO,OAAe,EACtB,AAAO,IAAU,CACjB;QACA,KAAK,CAAC,eAJC,SAAA,aACA,UAAA,cACA,OAAA;QAGP,IAAI,CAAC,IAAI,GAAG;IACd;IAEA;;GAEC,GACD,iBAAyB;QACvB,OAAQ,IAAI,CAAC,MAAM;YACjB,KAAK;gBACH,OAAO,CAAC,wBAAwB,EAAE,IAAI,CAAC,OAAO,EAAE;YAClD,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO,CAAC,0BAA0B,EAAE,IAAI,CAAC,OAAO,EAAE;YACpD,KAAK;gBACH,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,EAAE;YACtC,KAAK;gBACH,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,OAAO,EAAE;YAChD,KAAK;gBACH,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE;YAC7C,KAAK;gBACH,OAAO;YACT;gBACE,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;QAC9B;IACF;IAEA;;GAEC,GACD,eAAuB;QACrB,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,IAAI;IACtG;AACF;AAEA;;CAEC,GACD,eAAe,SACb,QAAgB,EAChB,UAAuB,CAAC,CAAC;IAEzB,IAAI;QACF,gDAAgD;QAChD,MAAM,QAAQ,sCACV,0BACA;QAEJ,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,QAAQ,MAAM,IAAI,MAAM,CAAC,EAAE,UAAU;QAEpE,iDAAiD;QACjD,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI,QAAQ,cAAc;QAE7E,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,eAAe,UAAU,EAAE;gBACzD,GAAG,OAAO;gBACV,OAAO;gBACP,SAAS;oBACP,gBAAgB;oBAChB,GAAI,sCAAQ,0BAAuC,CAAC,CAAC;oBACrD,GAAG,QAAQ,OAAO;gBACpB;gBACA,QAAQ,WAAW,MAAM;YAC3B;YAEA,aAAa;YAEb,6BAA6B;YAC7B,IAAI;YACJ,IAAI;gBACF,OAAO,MAAM,SAAS,IAAI;YAC5B,EAAE,OAAO,YAAY;gBACnB,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,MAAM,IAAI,SACR,SAAS,MAAM,EACf,+BACA;oBAAE;oBAAY,QAAQ,SAAS,MAAM;gBAAC;YAE1C;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,8DAA8D;gBAC9D,IAAI,eAAe,KAAK,OAAO,IAAI;gBAEnC,IAAI,KAAK,MAAM,IAAI,MAAM,OAAO,CAAC,KAAK,MAAM,GAAG;oBAC7C,eAAe,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,MAAa,IAAI,OAAO,IAAI,KAAK,IAAI,CAAC;gBACxE;gBAEA,MAAM,WAAW,IAAI,SAAS,SAAS,MAAM,EAAE,cAAc;gBAE7D,gCAAgC;gBAChC,QAAQ,KAAK,CAAC,gBAAgB,SAAS,YAAY;gBAEnD,MAAM;YACR;YAEA,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,QAAQ,MAAM,IAAI,MAAM,CAAC,EAAE,UAAU;YAEnE,wCAAwC;YACxC,iFAAiF;YACjF,mEAAmE;YACnE,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,GAAG;YAC7B,OAAO;gBACL,SAAS,WAAW;gBACpB,GAAG,IAAI;YACT;QACF,EAAE,OAAO,YAAY;YACnB,aAAa;YAEb,2CAA2C;YAC3C,IAAI,sBAAsB,SAAS,WAAW,IAAI,KAAK,cAAc;gBACnE,MAAM,eAAe,IAAI,SACvB,KACA;gBAEF,QAAQ,KAAK,CAAC,qBAAqB,aAAa,YAAY;gBAC5D,MAAM;YACR;YAEA,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,UAAU;YAC7B,MAAM;QACR;QAEA,mCAAmC;QACnC,MAAM,eAAe,IAAI,SACvB,GACA,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAG3C,QAAQ,KAAK,CAAC,oBAAoB,aAAa,YAAY;QAE3D,MAAM;IACR;AACF;AAKO,eAAe,IAAO,QAAgB,EAAE,OAAqB;IAClE,OAAO,SAAY,UAAU;QAC3B,GAAG,OAAO;QACV,QAAQ;IACV;AACF;AAKO,eAAe,KACpB,QAAgB,EAChB,IAAU,EACV,OAAqB;IAErB,OAAO,SAAY,UAAU;QAC3B,GAAG,OAAO;QACV,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAKO,eAAe,IACpB,QAAgB,EAChB,IAAU,EACV,OAAqB;IAErB,OAAO,SAAY,UAAU;QAC3B,GAAG,OAAO;QACV,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAKO,eAAe,MACpB,QAAgB,EAChB,IAAU,EACV,OAAqB;IAErB,OAAO,SAAY,UAAU;QAC3B,GAAG,OAAO;QACV,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAKO,eAAe,IAAO,QAAgB,EAAE,OAAqB;IAClE,OAAO,SAAY,UAAU;QAC3B,GAAG,OAAO;QACV,QAAQ;IACV;AACF;AAKO,eAAe,OACpB,QAAgB,EAChB,QAAkB,EAClB,OAAqB;IAErB,IAAI;QACF,MAAM,QAAQ,sCACV,0BACA;QAEJ,QAAQ,GAAG,CAAC,CAAC,wBAAwB,EAAE,UAAU;QAEjD,mDAAmD;QACnD,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI;QAEvD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,eAAe,UAAU,EAAE;gBACzD,GAAG,OAAO;gBACV,QAAQ;gBACR,MAAM;gBACN,SAAS;oBACP,GAAI,sCAAQ,0BAAuC,CAAC,CAAC;oBACrD,GAAG,SAAS,OAAO;gBACrB;gBACA,QAAQ,WAAW,MAAM;YAE3B;YAEA,aAAa;YAEb,IAAI;YACJ,IAAI;gBACF,OAAO,MAAM,SAAS,IAAI;YAC5B,EAAE,OAAO,YAAY;gBACnB,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,MAAM,IAAI,SACR,SAAS,MAAM,EACf,+BACA;oBAAE;oBAAY,QAAQ,SAAS,MAAM;gBAAC;YAE1C;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,WAAW,IAAI,SAAS,SAAS,MAAM,EAAE,KAAK,OAAO,IAAI,2BAA2B;gBAC1F,QAAQ,KAAK,CAAC,mBAAmB,SAAS,YAAY;gBACtD,MAAM;YACR;YAEA,QAAQ,GAAG,CAAC,CAAC,kBAAkB,EAAE,UAAU;YAE3C,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,GAAG;YAC7B,OAAO;gBACL,SAAS,WAAW;gBACpB,GAAG,IAAI;YACT;QACF,EAAE,OAAO,kBAAkB;YACzB,aAAa;YAEb,6CAA6C;YAC7C,IAAI,4BAA4B,SAAS,iBAAiB,IAAI,KAAK,cAAc;gBAC/E,MAAM,eAAe,IAAI,SACvB,KACA;gBAEF,QAAQ,KAAK,CAAC,sBAAsB,aAAa,YAAY;gBAC7D,MAAM;YACR;YAEA,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,UAAU;YAC7B,MAAM;QACR;QAEA,MAAM,cAAc,IAAI,SACtB,KACA,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAG3C,QAAQ,KAAK,CAAC,mBAAmB,YAAY,YAAY;QAEzD,MAAM;IACR;AACF;AAMO,SAAS,eAAe,KAAU;IACvC,IAAI,iBAAiB,UAAU;QAC7B,OAAO,MAAM,cAAc;IAC7B;IACA,OAAO,OAAO,WAAW;AAC3B;AAKO,MAAM,cAAc;IACzB,OAAO,OAAO;QACZ,OAAO,KAAK,iLAAa,CAAC,IAAI,CAAC,KAAK,EAAE;IACxC;IACA,UAAU,OAAO;QACf,OAAO,KAAK,iLAAa,CAAC,IAAI,CAAC,QAAQ,EAAE;IAC3C;IACA,QAAQ;QACN,OAAO,KAAK,iLAAa,CAAC,IAAI,CAAC,MAAM;IACvC;IACA,gBAAgB,OAAO;QACrB,MAAM,QAAQ,sCAAgC,0BAAgC;QAC9E,OAAO,IAAI,iLAAa,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM;YACnD,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;YAClC;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mariame%20barry/Desktop/rhmanagement/frontend/src/services/badges.service.ts"],"sourcesContent":["import { API_ENDPOINTS } from \"@/src/constants\";\r\nimport { get, post } from \"./api\";\r\nimport type { Badge, ApiResponse, PaginatedResponse } from \"@/src/types\";\r\n\r\n/**\r\n * Badge Service\r\n * Handles all badge-related API calls\r\n */\r\n\r\nexport const badgesService = {\r\n  /**\r\n   * Get all badge requests\r\n   */\r\n  async getAll(params?: {\r\n    page?: string;\r\n    limit?: string;\r\n    status?: string;\r\n    type?: string;\r\n    search?: string;\r\n    dateDemandeDe?: string;\r\n    dateDemandeA?: string;\r\n    dateImpressionDe?: string;\r\n    dateImpressionA?: string;\r\n  }): Promise<ApiResponse<PaginatedResponse<Badge>>> {\r\n    const queryParams = new URLSearchParams();\r\n    if (params?.page) queryParams.append(\"page\", params.page);\r\n    if (params?.limit) queryParams.append(\"limit\", params.limit);\r\n    if (params?.status && params.status !== \"TOUS\") queryParams.append(\"status\", params.status);\r\n    if (params?.type && params.type !== \"TOUS\") queryParams.append(\"type\", params.type);\r\n    if (params?.search) queryParams.append(\"search\", params.search);\r\n    if (params?.dateDemandeDe) queryParams.append(\"dateDemandeDe\", params.dateDemandeDe);\r\n    if (params?.dateDemandeA) queryParams.append(\"dateDemandeA\", params.dateDemandeA);\r\n    if (params?.dateImpressionDe) queryParams.append(\"dateImpressionDe\", params.dateImpressionDe);\r\n    if (params?.dateImpressionA) queryParams.append(\"dateImpressionA\", params.dateImpressionA);\r\n\r\n    const endpoint = `${API_ENDPOINTS.BADGES}?${queryParams.toString()}`;\r\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n    return get<PaginatedResponse<Badge>>(endpoint, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Get a single badge by ID\r\n   */\r\n  async getById(id: string): Promise<ApiResponse<Badge>> {\r\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n    return get<Badge>(API_ENDPOINTS.BADGE_BY_ID(id), {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Print a badge\r\n   */\r\n  async print(id: string): Promise<ApiResponse<Badge>> {\r\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n    return post<Badge>(API_ENDPOINTS.PRINT_BADGE(id), {}, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Verify badge by QR code - Retourne uniquement le matricule\r\n   */\r\n  async verify(qrCode: string): Promise<{\r\n    success: boolean;\r\n    employee?: {\r\n      matricule: string;\r\n    };\r\n  }> {\r\n    console.log('🔍 Appel API verify avec qrCode:', qrCode);\r\n    // Route publique, pas besoin de token\r\n    return get<{\r\n      employee?: {\r\n        matricule: string;\r\n      };\r\n    }>(`${API_ENDPOINTS.BADGES}/verify/${qrCode}`) as any;\r\n  },\r\n\r\n  /**\r\n   * Get QR code image for a badge\r\n   */\r\n  async getQRCode(badgeId: string): Promise<ApiResponse<{ qrCode: string; image: string }>> {\r\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n    return get<{ qrCode: string; image: string }>(`${API_ENDPOINTS.BADGES}/${badgeId}/qr-code`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Download QR code as PNG file\r\n   */\r\n  async downloadQRCode(badgeId: string, employeeName: string): Promise<void> {\r\n    try {\r\n      const response = await this.getQRCode(badgeId);\r\n\r\n      if (!response.success || !response.data?.image) {\r\n        throw new Error('Impossible de récupérer le QR code');\r\n      }\r\n\r\n      // Convert base64 to blob\r\n      const base64Data = response.data.image;\r\n      const link = document.createElement('a');\r\n      link.href = base64Data;\r\n      link.download = `QRCode_${employeeName.replace(/\\s+/g, '_')}_${Date.now()}.png`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error('Erreur téléchargement QR code:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mariame%20barry/Desktop/rhmanagement/frontend/app/dashboard/impression/badges/%5Bid%5D/print/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ArrowLeft, Printer } from \"lucide-react\";\r\nimport { badgesService } from \"@/src/services/badges.service\";\r\nimport { getImageUrl } from \"@/src/constants\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function PrintBadgePage() {\r\n  const params = useParams();\r\n  const router = useRouter();\r\n  const badgeId = params.id as string;\r\n\r\n  const [badge, setBadge] = useState<any>(null);\r\n  const [qrCodeImage, setQrCodeImage] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  // Détecter si on doit imprimer automatiquement\r\n  const searchParams = typeof window !== 'undefined' ? new URLSearchParams(window.location.search) : null;\r\n  const shouldAutoPrint = searchParams?.get('autoprint') === 'true';\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) return;\r\n    // Reset state before fetching\r\n    setBadge(null);\r\n    setQrCodeImage(\"\");\r\n    fetchBadgeData();\r\n  }, [badgeId, mounted]);\r\n\r\n  // Auto-impression si demandée\r\n  useEffect(() => {\r\n    if (shouldAutoPrint && badge && qrCodeImage && !isLoading) {\r\n      // Petit délai pour s'assurer que tout est bien rendu\r\n      const timer = setTimeout(() => {\r\n        window.print();\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [shouldAutoPrint, badge, qrCodeImage, isLoading]);\r\n\r\n  const fetchBadgeData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      // Récupérer les données du badge\r\n      const badgeResponse = await badgesService.getById(badgeId);\r\n\r\n      if (badgeResponse.success && badgeResponse.data) {\r\n        setBadge(badgeResponse.data);\r\n      }\r\n\r\n      // Récupérer l'image du QR code\r\n      const qrResponse = await badgesService.getQRCode(badgeId);\r\n      if (qrResponse.success && qrResponse.data) {\r\n        setQrCodeImage(qrResponse.data.image);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du chargement:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  if (!mounted) {\r\n    return null;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-12 h-12 border-4 border-orange-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Chargement du badge...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!badge) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600 text-xl mb-4\">Badge non trouvé</p>\r\n          <Button onClick={() => router.back()}>\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Retour\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const employee = badge?.employee;\r\n\r\n  // Si employee est un string (ID) plutôt qu'un objet, on a un problème\r\n  if (!employee || typeof employee === 'string') {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600 text-xl mb-4\">Erreur: Données de l'employé non chargées</p>\r\n          <p className=\"text-gray-600 mb-4\">Type: {typeof employee}</p>\r\n          <Button onClick={() => router.back()}>\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Retour\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      {/* Barre d'actions (cachée à l'impression) */}\r\n      <div className=\"no-print bg-white border-b border-gray-200 sticky top-0 z-50 shadow-sm\">\r\n        <div className=\"container mx-auto px-6 py-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <Button variant=\"outline\" onClick={() => router.back()}>\r\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                Retour\r\n              </Button>\r\n              <div>\r\n                <h1 className=\"text-xl font-bold text-gray-900\">\r\n                  Badge de {employee?.prenom} {employee?.nom}\r\n                </h1>\r\n                <p className=\"text-sm text-gray-600\">Matricule: {employee?.matricule}</p>\r\n              </div>\r\n            </div>\r\n            <Button onClick={handlePrint} className=\"bg-orange-600 hover:bg-orange-700\">\r\n              <Printer className=\"w-4 h-4 mr-2\" />\r\n              Imprimer\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ========== CONTENU À IMPRIMER ========== */}\r\n      <div className=\"print-container py-8\">\r\n\r\n        {/* ========== RECTO DU BADGE ========== */}\r\n        <div className=\"badge-page mb-8\">\r\n          {/*\r\n            Conteneur principal du badge\r\n            - TAILLE EXACTE DE L'IMAGE : 661px x 1016px\r\n            - Position relative pour permettre le positionnement absolu des éléments enfants\r\n          */}\r\n          <div className=\"badge-card\" style={{\r\n            position: \"relative\",\r\n            width: \"661px\",\r\n            height: \"1016px\",\r\n            overflow: \"hidden\",\r\n            border: \"2px solid #333\",\r\n            boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\"\r\n          }}>\r\n\r\n            {/*\r\n              IMAGE DE FOND - badgeRecto.jpeg\r\n              - Position absolue pour couvrir tout le conteneur\r\n              - zIndex: 1 (couche la plus basse)\r\n            */}\r\n            <img\r\n              src=\"/images/badgeRecto.jpeg\"\r\n              alt=\"Badge Recto\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                objectFit: \"cover\",  /* Remplit tout l'espace sans déformation */\r\n                zIndex: 1\r\n              }}\r\n            />\r\n\r\n            {/*\r\n              ZONE DE CONTENU - Positionnement précis selon l'image badgeRecto.jpeg\r\n              - Position absolue pour placer les éléments aux emplacements exacts\r\n              - zIndex: 2 (au-dessus de l'image de fond)\r\n            */}\r\n            <div style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              zIndex: 2\r\n            }}>\r\n\r\n              {/*\r\n                1. PHOTO - Rectangle central\r\n                - Position selon l'image : rectangle au centre, en haut\r\n                - Dimensions exactes selon le rectangle sur l'image\r\n                - Affiche la photo dynamique de l'employé\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"258px\",\r\n                left: \"50%\",\r\n                transform: \"translateX(-50%)\",\r\n                width: \"226px\",\r\n                height: \"246px\",\r\n                border: \"2px solid #000\",\r\n                overflow: \"hidden\",\r\n                backgroundColor: \"#f0f0f0\"\r\n              }}>\r\n                {employee?.photo && getImageUrl(employee.photo) ? (\r\n                  <img\r\n                    src={getImageUrl(employee.photo) || ''}\r\n                    alt={`${employee?.prenom} ${employee?.nom}`}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"cover\"\r\n                    }}\r\n                    onError={(e) => {\r\n                      // Masquer l'image en cas d'erreur et afficher les initiales\r\n                      e.currentTarget.style.display = 'none';\r\n                    }}\r\n                  />\r\n                ) : null}\r\n                {(!employee?.photo || !getImageUrl(employee.photo)) && (\r\n                  <div style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    fontSize: \"80px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"#999\",\r\n                    backgroundColor: \"#e5e7eb\"\r\n                  }}>\r\n                    {employee?.prenom?.[0]}{employee?.nom?.[0]}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/*\r\n                2. NOM ET PRÉNOM - Remplace le texte \"Nom et prenom\" sur l'image\r\n                - Position exacte pour couvrir le texte de l'image\r\n                - Fond blanc OPAQUE pour bien masquer le texte de l'image\r\n                - Police très grande et grasse comme sur l'image\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"510px\",\r\n                left: \"50%\",\r\n                transform: \"translateX(-50%)\",\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                backgroundColor: \"#FFFFFF\",\r\n                padding: \"10px 0\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"48px\",\r\n                  fontWeight: \"900\",\r\n                  color: \"#000\",\r\n                  margin: 0,\r\n                  textTransform: \"capitalize\",\r\n                  letterSpacing: \"2px\",\r\n                  lineHeight: \"1.2\"\r\n                }}>\r\n                  {employee?.prenom} {employee?.nom}\r\n                </p>\r\n              </div>\r\n\r\n              {/*\r\n                3. TYPE D'EMPLOYÉ - Remplace \"Colletif des démarcheurs\" sur l'image\r\n                - Position exacte pour couvrir le texte orange de l'image\r\n                - Fond blanc OPAQUE pour bien masquer le texte de l'image\r\n                - Police orange comme sur l'image\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"588px\",\r\n                left: \"50%\",\r\n                transform: \"translateX(-50%)\",\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                backgroundColor: \"#FFFFFF\",\r\n                padding: \"8px 0\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"42px\",\r\n                  fontWeight: \"400\",\r\n                  color: \"#ff8d13\",\r\n                  margin: 0,\r\n                  fontStyle: \"italic\"\r\n                }}>\r\n                  {employee?.type === \"PERSONNELS_DSD\" && \"Personnels DSD Guinée\"}\r\n                  {employee?.type === \"DNTT\" && \"DNTT\"}\r\n                  {employee?.type === \"STAGIAIRES_DSD\" && \"Stagiaires DSD Guinée\"}\r\n                  {employee?.type === \"BANQUES\" && \"Banques\"}\r\n                  {employee?.type === \"MAISONS_PLAQUE\" && \"Maisons de Plaque\"}\r\n                  {employee?.type === \"DNTT_STAGIAIRES\" && \"DNTT Stagiaires\"}\r\n                  {employee?.type === \"DEMARCHEURS\" && \"Colletif des démarcheurs\"}\r\n                </p>\r\n              </div>\r\n\r\n              {/*\r\n                4. MATRICULE (ID) - En bas à gauche\r\n                - Position : EXACTEMENT sur la même ligne que \"ID\"\r\n                - Aligné horizontalement avec \"ID\"\r\n                - COULEUR NOIRE\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"665px\",\r\n                left: \"170px\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"40px\",\r\n                  fontWeight: \"700\",\r\n                  color: \"#000\",\r\n                  margin: 0,\r\n                  lineHeight: \"1\"\r\n                }}>\r\n                  {employee?.matricule}\r\n                </p>\r\n              </div>\r\n\r\n              {/*\r\n                5. TÉLÉPHONE - Sous le matricule\r\n                - Position : EXACTEMENT sur la même ligne que l'icône téléphone\r\n                - Aligné horizontalement avec l'icône téléphone\r\n                - NUMÉRO COMMUN À TOUS LES EMPLOYÉS\r\n                - COULEUR NOIRE\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"730px\",\r\n                left: \"170px\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"40px\",\r\n                  fontWeight: \"700\",\r\n                  color: \"#000\",\r\n                  margin: 0,\r\n                  lineHeight: \"1\"\r\n                }}>\r\n                  +224669611681\r\n                </p>\r\n              </div>\r\n\r\n              {/*\r\n                6. EMAIL - Sous le téléphone\r\n                - Position : EXACTEMENT sur la même ligne que l'icône email\r\n                - Aligné horizontalement avec l'icône email\r\n                - EMAIL COMMUN À TOUS LES EMPLOYÉS\r\n                - COULEUR NOIRE\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"810px\",\r\n                left: \"170px\",\r\n                maxWidth: \"430px\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"28px\",\r\n                  fontWeight: \"600\",\r\n                  color: \"#000\",\r\n                  margin: 0,\r\n                  lineHeight: \"1\",\r\n                  wordBreak: \"break-all\"\r\n                }}>\r\n                  info@dsdguinee.com\r\n                </p>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* ========== VERSO DU BADGE ========== */}\r\n        <div className=\"badge-page\">\r\n          {/*\r\n            Conteneur principal du VERSO\r\n            - TAILLE EXACTE DE L'IMAGE : 661px x 1016px\r\n            - Position relative pour permettre le positionnement absolu des éléments enfants\r\n          */}\r\n          <div className=\"badge-card\" style={{\r\n            position: \"relative\",\r\n            width: \"661px\",\r\n            height: \"1016px\",\r\n            overflow: \"hidden\",\r\n            border: \"2px solid #333\",\r\n            boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\"\r\n          }}>\r\n\r\n            {/*\r\n              IMAGE DE FOND - badgeVerso.jpeg\r\n              - Position absolue pour couvrir tout le conteneur\r\n              - zIndex: 1 (couche la plus basse)\r\n            */}\r\n            <img\r\n              src=\"/images/badgeVerso.jpeg\"\r\n              alt=\"Badge Verso\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                objectFit: \"cover\",\r\n                zIndex: 1\r\n              }}\r\n            />\r\n\r\n            {/*\r\n              ZONE DE CONTENU - Positionnement du QR code dynamique\r\n              - Position absolue pour placer le QR code à l'emplacement exact\r\n              - zIndex: 2 (au-dessus de l'image de fond)\r\n            */}\r\n            <div style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              zIndex: 2\r\n            }}>\r\n\r\n              {/*\r\n                QR CODE DYNAMIQUE - Masque le QR code statique de l'image\r\n                - Position : exactement à l'emplacement du QR code sur l'image\r\n                - Fond blanc pour masquer le QR code statique\r\n              */}\r\n              {qrCodeImage && (\r\n                <div style={{\r\n                  position: \"absolute\",\r\n                  top: \"668px\",\r\n                  left: \"50%\",\r\n                  transform: \"translateX(-50%)\",\r\n                  backgroundColor: \"#FFFFFF\",\r\n                  padding: \"10px\"\r\n                }}>\r\n                  <img\r\n                    src={qrCodeImage}\r\n                    alt=\"QR Code\"\r\n                    width=\"240\"\r\n                    height=\"240\"\r\n                    style={{\r\n                      display: \"block\"\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/*\r\n                ADRESSE (Icône localisation) - En haut à gauche\r\n                - Position : à droite de l'icône localisation\r\n                - Texte noir\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"330px\",\r\n                left: \"150px\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"26px\",\r\n                  fontWeight: \"600\",\r\n                  color: \"#000\",\r\n                  margin: 0,\r\n                  lineHeight: \"1\"\r\n                }}>\r\n                  Conakry, Guinée\r\n                </p>\r\n              </div>\r\n\r\n              {/*\r\n                TÉLÉPHONE (Icône téléphone) - Sous l'adresse\r\n                - Position : à droite de l'icône téléphone\r\n                - NUMÉRO COMMUN À TOUS LES EMPLOYÉS\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"400px\",\r\n                left: \"150px\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"26px\",\r\n                  fontWeight: \"600\",\r\n                  color: \"#000\",\r\n                  margin: 0,\r\n                  lineHeight: \"1\"\r\n                }}>\r\n                  +224 623 41 87 95\r\n                </p>\r\n              </div>\r\n\r\n              {/*\r\n                SITE WEB (Icône globe) - Sous le téléphone\r\n                - Position : à droite de l'icône globe\r\n                - ADRESSE WEB COMMUNE À TOUS LES EMPLOYÉS\r\n              */}\r\n              <div style={{\r\n                position: \"absolute\",\r\n                top: \"480px\",\r\n                left: \"150px\"\r\n              }}>\r\n                <p style={{\r\n                  fontSize: \"26px\",\r\n                  fontWeight: \"600\",\r\n                  color: \"#000\",\r\n                  margin: 0,\r\n                  lineHeight: \"1\"\r\n                }}>\r\n                  www.dsdguinee.com\r\n                </p>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* Styles d'impression */}\r\n      <style jsx global>{`\r\n        @page {\r\n          size: A4 portrait;\r\n          margin: 0;\r\n        }\r\n\r\n        @media print {\r\n          * {\r\n            -webkit-print-color-adjust: exact !important;\r\n            print-color-adjust: exact !important;\r\n            color-adjust: exact !important;\r\n          }\r\n\r\n          .no-print {\r\n            display: none !important;\r\n          }\r\n\r\n          html, body {\r\n            margin: 0 !important;\r\n            padding: 0 !important;\r\n            background: white !important;\r\n            width: 100% !important;\r\n            height: 100% !important;\r\n          }\r\n\r\n          .print-container {\r\n            padding: 0 !important;\r\n            margin: 0 !important;\r\n            width: 100% !important;\r\n          }\r\n\r\n          .badge-page {\r\n            page-break-after: always;\r\n            page-break-inside: avoid;\r\n            break-after: page;\r\n            break-inside: avoid;\r\n            margin: 0 !important;\r\n            padding: 0 !important;\r\n            display: flex !important;\r\n            align-items: center !important;\r\n            justify-content: center !important;\r\n            width: 100vw !important;\r\n            height: 100vh !important;\r\n            position: relative !important;\r\n          }\r\n\r\n          .badge-page:last-child {\r\n            page-break-after: auto;\r\n            break-after: auto;\r\n          }\r\n\r\n          .badge-card {\r\n            box-shadow: none !important;\r\n            border: 2px solid #333 !important;\r\n            overflow: hidden !important;\r\n            border-radius: 0 !important;\r\n            position: relative !important;\r\n            width: 661px !important;\r\n            height: 1016px !important;\r\n            transform: none !important;\r\n          }\r\n\r\n          .badge-card img {\r\n            -webkit-print-color-adjust: exact !important;\r\n            print-color-adjust: exact !important;\r\n          }\r\n        }\r\n\r\n        @media screen {\r\n          .print-container {\r\n            max-width: 1200px;\r\n            margin: 0 auto;\r\n          }\r\n\r\n          .badge-page {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            padding: 20px;\r\n          }\r\n\r\n          .badge-card {\r\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n            border-radius: 8px;\r\n            overflow: hidden !important;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}