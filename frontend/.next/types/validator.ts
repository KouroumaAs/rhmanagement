// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/change-password/change-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/change-password/change-password">> = Specific
  const handler = {} as typeof import("../../app/change-password/change-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/change-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/change-password">> = Specific
  const handler = {} as typeof import("../../app/change-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/impression/badges/[id]/print/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/impression/badges/[id]/print">> = Specific
  const handler = {} as typeof import("../../app/dashboard/impression/badges/[id]/print/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/impression/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/impression">> = Specific
  const handler = {} as typeof import("../../app/dashboard/impression/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/employees/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh/employees/[id]/edit">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/employees/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/employees/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh/employees/[id]">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/employees/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/employees/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh/employees/new">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/employees/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/employees/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh/employees">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/employees/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/users/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh/users/[id]/edit">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/users/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/users/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh/users/[id]">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/users/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/rh/users">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/security/scan/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/security/scan">> = Specific
  const handler = {} as typeof import("../../app/dashboard/security/scan/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/forgot-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forgot-password">> = Specific
  const handler = {} as typeof import("../../app/forgot-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register">> = Specific
  const handler = {} as typeof import("../../app/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/test-images/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-images">> = Specific
  const handler = {} as typeof import("../../app/test-images/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/verify/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/verify">> = Specific
  const handler = {} as typeof import("../../app/verify/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../app/dashboard/rh/employees/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard/rh/employees">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/employees/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard/rh">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/rh/users/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard/rh/users">> = Specific
  const handler = {} as typeof import("../../app/dashboard/rh/users/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
